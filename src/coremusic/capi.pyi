"""Type stubs for coremusic.capi module.

This module provides low-level Python bindings to CoreAudio frameworks
via Cython. All functions are thin wrappers around C APIs.
"""

from typing import Dict, List, Tuple, Optional, Any

# ============================================================================
# Base Classes
# ============================================================================

class CoreAudioObject:
    """Base class for CoreAudio objects with automatic resource management."""
    object_id: int
    is_disposed: bool

    def __init__(self) -> None: ...
    def _set_object_id(self, object_id: int) -> None: ...
    def _ensure_not_disposed(self) -> None: ...
    def dispose(self) -> None: ...

class AudioPlayer:
    """Audio player implementation with callback infrastructure."""
    def __init__(self) -> None: ...

# ============================================================================
# FourCC Conversion
# ============================================================================

def fourchar_to_int(fourcc: str) -> int:
    """Convert a four-character code string to integer."""
    ...

def int_to_fourchar(value: int) -> str:
    """Convert an integer to four-character code string."""
    ...

# ============================================================================
# Audio File Operations
# ============================================================================

def audio_file_open_url(file_path: str) -> int:
    """Open an audio file and return file ID."""
    ...

def audio_file_close(file_id: int) -> None:
    """Close an audio file."""
    ...

def audio_file_get_property(file_id: int, property_id: int) -> bytes:
    """Get a property from an audio file."""
    ...

def audio_file_read_packets(file_id: int, start_packet: int, packet_count: int) -> Tuple[bytes, int]:
    """Read audio packets from file. Returns (data, actual_count)."""
    ...

# ============================================================================
# Audio File Stream Operations
# ============================================================================

def audio_file_stream_open() -> int:
    """Open an audio file stream."""
    ...

def audio_file_stream_close(stream_id: int) -> None:
    """Close an audio file stream."""
    ...

def audio_file_stream_parse_bytes(stream_id: int, data: bytes) -> None:
    """Parse audio data bytes."""
    ...

def audio_file_stream_seek(stream_id: int, packet_offset: int) -> None:
    """Seek to packet offset in stream."""
    ...

def audio_file_stream_get_property(stream_id: int, property_id: int) -> bytes:
    """Get a property from audio file stream."""
    ...

def audio_file_stream_get_property_ready_to_produce_packets(stream_id: int) -> bool:
    """Check if stream is ready to produce packets."""
    ...

# ============================================================================
# Audio Queue Operations
# ============================================================================

def audio_queue_new_output(format_dict: Dict[str, Any]) -> int:
    """Create a new output audio queue."""
    ...

def audio_queue_allocate_buffer(queue_id: int, buffer_size: int) -> int:
    """Allocate an audio buffer."""
    ...

def audio_queue_enqueue_buffer(queue_id: int, buffer_id: int) -> None:
    """Enqueue an audio buffer."""
    ...

def audio_queue_start(queue_id: int) -> None:
    """Start the audio queue."""
    ...

def audio_queue_stop(queue_id: int, immediate: bool) -> None:
    """Stop the audio queue."""
    ...

def audio_queue_dispose(queue_id: int, immediate: bool) -> None:
    """Dispose of an audio queue."""
    ...

# ============================================================================
# Audio Component & AudioUnit Operations
# ============================================================================

def audio_component_find_next(description: Dict[str, Any]) -> Optional[int]:
    """Find next matching audio component."""
    ...

def audio_component_instance_new(component_id: int) -> int:
    """Create new instance of audio component."""
    ...

def audio_component_instance_dispose(instance_id: int) -> None:
    """Dispose of audio component instance."""
    ...

def audio_unit_initialize(unit_id: int) -> None:
    """Initialize an AudioUnit."""
    ...

def audio_unit_uninitialize(unit_id: int) -> None:
    """Uninitialize an AudioUnit."""
    ...

def audio_unit_get_property(unit_id: int, property_id: int, scope: int, element: int) -> bytes:
    """Get a property from AudioUnit."""
    ...

def audio_unit_set_property(unit_id: int, property_id: int, scope: int, element: int, data: bytes) -> None:
    """Set a property on AudioUnit."""
    ...

def audio_output_unit_start(unit_id: int) -> None:
    """Start AudioUnit output."""
    ...

def audio_output_unit_stop(unit_id: int) -> None:
    """Stop AudioUnit output."""
    ...

# ============================================================================
# Audio Hardware & Device Operations
# ============================================================================

def audio_hardware_get_devices() -> List[int]:
    """Get all audio device IDs."""
    ...

def audio_hardware_get_default_output_device() -> int:
    """Get default output device ID."""
    ...

def audio_hardware_get_default_input_device() -> int:
    """Get default input device ID."""
    ...

def audio_hardware_destroy_aggregate_device(device_id: int) -> None:
    """Destroy an aggregate device."""
    ...

def audio_hardware_unload() -> None:
    """Unload audio hardware."""
    ...

def audio_object_get_property_data(object_id: int, property_id: int, scope: int, element: int) -> bytes:
    """Get property data from an AudioObject."""
    ...

def audio_object_show(object_id: int) -> None:
    """Display information about an AudioObject."""
    ...

# ============================================================================
# Audio Services Operations
# ============================================================================

def audio_services_create_system_sound_id(file_url: str) -> int:
    """Create a system sound ID."""
    ...

def audio_services_dispose_system_sound_id(sound_id: int) -> None:
    """Dispose of a system sound ID."""
    ...

def audio_services_play_system_sound(sound_id: int) -> None:
    """Play a system sound."""
    ...

def audio_services_play_alert_sound(sound_id: int) -> None:
    """Play an alert sound."""
    ...

def audio_services_get_property(property_id: int, specifier_size: int, specifier: bytes) -> bytes:
    """Get an AudioServices property."""
    ...

def audio_services_set_property(property_id: int, specifier_size: int, specifier: bytes, data: bytes) -> None:
    """Set an AudioServices property."""
    ...

# ============================================================================
# MIDI Operations
# ============================================================================

def midi_client_create(name: str) -> int:
    """Create a MIDI client."""
    ...

def midi_client_dispose(client_id: int) -> None:
    """Dispose of a MIDI client."""
    ...

def midi_input_port_create(client_id: int, name: str) -> int:
    """Create a MIDI input port."""
    ...

def midi_output_port_create(client_id: int, name: str) -> int:
    """Create a MIDI output port."""
    ...

def midi_port_dispose(port_id: int) -> None:
    """Dispose of a MIDI port."""
    ...

def midi_port_connect_source(port_id: int, source_id: int) -> None:
    """Connect MIDI port to source."""
    ...

def midi_port_disconnect_source(port_id: int, source_id: int) -> None:
    """Disconnect MIDI port from source."""
    ...

def midi_send(port_id: int, destination_id: int, data: bytes, timestamp: int) -> None:
    """Send MIDI data."""
    ...

def create_midi_note_message(channel: int, note: int, velocity: int, release_velocity: int, duration: float) -> bytes:
    """Create a MIDI note message."""
    ...

def create_midi_channel_message(status: int, data1: int, data2: int) -> bytes:
    """Create a MIDI channel message."""
    ...

# ============================================================================
# Music Player & Sequence Operations
# ============================================================================

def dispose_music_player(player_id: int) -> None:
    """Dispose of a music player."""
    ...

def dispose_music_sequence(sequence_id: int) -> None:
    """Dispose of a music sequence."""
    ...

def create_music_device_note_params(pitch: float, velocity: float) -> bytes:
    """Create music device note parameters."""
    ...

def create_music_device_std_note_params(pitch: int, velocity: int) -> bytes:
    """Create standard music device note parameters."""
    ...

def demonstrate_callback_infrastructure() -> None:
    """Demonstrate callback infrastructure (for testing)."""
    ...

# ============================================================================
# Property ID Getters - Audio File
# ============================================================================

def get_audio_file_property_data_format() -> int: ...
def get_audio_file_property_audio_data_packet_count() -> int: ...
def get_audio_file_property_estimated_duration() -> int: ...
def get_audio_file_property_maximum_packet_size() -> int: ...
def get_audio_file_read_permission() -> int: ...

# ============================================================================
# Property ID Getters - Audio File Stream
# ============================================================================

def get_audio_file_stream_property_ready_to_produce_packets() -> int: ...
def get_audio_file_stream_property_data_format() -> int: ...
def get_audio_file_stream_property_audio_data_byte_count() -> int: ...
def get_audio_file_stream_property_audio_data_packet_count() -> int: ...
def get_audio_file_stream_property_average_bytes_per_packet() -> int: ...
def get_audio_file_stream_property_bit_rate() -> int: ...
def get_audio_file_stream_property_byte_to_packet() -> int: ...
def get_audio_file_stream_property_channel_layout() -> int: ...
def get_audio_file_stream_property_data_offset() -> int: ...
def get_audio_file_stream_property_file_format() -> int: ...
def get_audio_file_stream_property_format_list() -> int: ...
def get_audio_file_stream_property_frame_to_packet() -> int: ...
def get_audio_file_stream_property_info_dictionary() -> int: ...
def get_audio_file_stream_property_magic_cookie_data() -> int: ...
def get_audio_file_stream_property_maximum_packet_size() -> int: ...
def get_audio_file_stream_property_packet_size_upper_bound() -> int: ...
def get_audio_file_stream_property_packet_table_info() -> int: ...
def get_audio_file_stream_property_packet_to_byte() -> int: ...
def get_audio_file_stream_property_packet_to_frame() -> int: ...

# Error codes
def get_audio_file_stream_error_unspecified_error() -> int: ...
def get_audio_file_stream_error_unsupported_file_type() -> int: ...
def get_audio_file_stream_error_unsupported_data_format() -> int: ...
def get_audio_file_stream_error_unsupported_property() -> int: ...
def get_audio_file_stream_error_bad_property_size() -> int: ...
def get_audio_file_stream_error_not_optimized() -> int: ...
def get_audio_file_stream_error_invalid_packet_offset() -> int: ...
def get_audio_file_stream_error_invalid_file() -> int: ...
def get_audio_file_stream_error_value_unknown() -> int: ...
def get_audio_file_stream_error_data_unavailable() -> int: ...
def get_audio_file_stream_error_illegal_operation() -> int: ...
def get_audio_file_stream_error_discontinuity_cant_recover() -> int: ...

# Flags
def get_audio_file_stream_parse_flag_discontinuity() -> int: ...
def get_audio_file_stream_property_flag_cache_property() -> int: ...
def get_audio_file_stream_property_flag_property_is_cached() -> int: ...
def get_audio_file_stream_seek_flag_offset_is_estimated() -> int: ...

# ============================================================================
# Property ID Getters - AudioUnit
# ============================================================================

def get_audio_unit_property_stream_format() -> int: ...
def get_audio_unit_property_sample_rate() -> int: ...
def get_audio_unit_property_latency() -> int: ...
def get_audio_unit_property_cpu_load() -> int: ...
def get_audio_unit_property_maximum_frames_per_slice() -> int: ...
def get_audio_unit_property_parameter_list() -> int: ...

def get_audio_unit_scope_global() -> int: ...
def get_audio_unit_scope_input() -> int: ...
def get_audio_unit_scope_output() -> int: ...

# ============================================================================
# Property ID Getters - Audio Device
# ============================================================================

def get_audio_device_property_device_uid() -> int: ...
def get_audio_device_property_model_uid() -> int: ...
def get_audio_device_property_transport_type() -> int: ...
def get_audio_device_property_device_is_alive() -> int: ...
def get_audio_device_property_nominal_sample_rate() -> int: ...
def get_audio_device_property_available_nominal_sample_rates() -> int: ...
def get_audio_device_property_is_hidden() -> int: ...
def get_audio_device_property_preferred_channels_for_stereo() -> int: ...
def get_audio_device_property_stream_configuration() -> int: ...

def get_audio_object_property_name() -> int: ...
def get_audio_object_property_manufacturer() -> int: ...
def get_audio_object_property_element_name() -> int: ...
def get_audio_object_property_element_main() -> int: ...
def get_audio_object_property_scope_global() -> int: ...
def get_audio_object_property_scope_input() -> int: ...
def get_audio_object_property_scope_output() -> int: ...

# ============================================================================
# Format & Type Getters
# ============================================================================

def get_audio_format_linear_pcm() -> int: ...
def get_audio_file_wave_type() -> int: ...
def get_audio_component_type_music_device() -> int: ...
